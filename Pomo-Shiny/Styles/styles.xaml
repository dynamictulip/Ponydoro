<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Ponydoro">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colours.xaml"/>
        <ResourceDictionary Source="Converters.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>
       
    <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Style.BasedOn>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontFamily" Value="{StaticResource ButtonFont}"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Width" Value="100" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="FontWeight" Value="Bold" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid>
                                <Path Fill="{TemplateBinding Background}"
                            Data="M10,0 h80 a10,10 0 0 1 10,10 a10,10 0 0 1 -10,10 h-80 a10,10 0 0 1 -10,-10 a10,10 0 0 1 10,-10 z" />
                                <ContentPresenter Content="{TemplateBinding Header}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                
                <Style.Triggers>
                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="13"/>
                                <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="#FFFFFFFF" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="12" />
                                <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource ButtonBackground}" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="{StaticResource ButtonFont}"/>
        <Setter Property="Visibility" Value="{Binding TimerOff, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path Fill="{TemplateBinding Background}"
                                Data="M10,0 h80 a10,10 0 0 1 10,10 a10,10 0 0 1 -10,10 h-80 a10,10 0 0 1 -10,-10 a10,10 0 0 1 10,-10 z" />
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="13"/>
                        <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="#FFFFFFFF" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="12" />
                        <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource ButtonBackground}" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>